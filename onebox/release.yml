- name: Package an Allspark release
  hosts: all
  vars:
    docker_images:
    - jenkins/jenkins
    - centos:7
    - blacklabelops/volumerize
    - "{{ allspark_traefik.image }}"
    - "{{ allspark_portainer.image }}"
    - "{{ allspark_sonarqube.image }}"
    - "{{ allspark_rocketchat.image }}"
    - "{{ allspark_rocketchat.database_image }}"
    - "{{ allspark_prometheus.image }}"
    - "{{ allspark_grafana.image }}"
    - "{{ allspark_node_exporter.image }}"
    - "{{ allspark_cadvisor.image }}"
    - "{{ allspark_gitlab.image }}"
    - "{{ allspark_gitlab.runner_image }}"
    - "{{ allspark_ldap.image }}"
    - "{{ allspark_ldap.management_image }}"

  tasks:
  - name: Creating release directory
    file:
      state: directory
      path: "{{ allspark_release_tmp_directory }}/{{ item }}"
    with_items:
      - images
      - dependencies

  - name: Archive RedHat system dependencies for installer
    script: "files/download_yum_packages.sh {{ allspark_release_tmp_directory }}/dependencies"

  - name: Archive Jenkins plugins
    shell: "files/download_jenkins_plugins.sh"
    environment:
      VOLUME_NAME: allspark_jenkins_plugins
      TARGET: "{{ allspark_release_tmp_directory}}/dependencies/jenkins_plugins"
      REQUIREMENTS_FILE: "{{ playbook_dir }}/files/jenkins_plugins.txt"
    when: allspark_jenkins.enabled

  - name: Exporting Docker images
    docker_image:
      state: present
      archive_path: "{{ allspark_release_tmp_directory}}/images/{{ item | b64encode }}.tar"
      name: "{{ item }}"
    with_items: "{{ docker_images }}"


  # - name: Compress release into destination file
  #   archive:
  #     path: "{{ allspark_release_tmp_directory }}/*"
  #     dest: "{{ allspark_release_destination }}"
  #     remove: True

  # Using shell instead of unarchive because pigz (multicore compression)
  # is not yet supported by the archive module
  - name: Compress release into destination file
    shell: "tar -c --use-compress-program=pigz -f {{ allspark_release_destination }} -C {{ allspark_release_tmp_directory }} ."
    args:
      warn: False

  - name: Clean up release directory
    file:
      path: "{{ allspark_release_tmp_directory }}"
      state: absent
