- name: Test shared runner token existence
  stat: path="{{ allspark_root_directory}}/data/secrets/gitlab_runner_registration_token.txt"
  register: gitlab_runner_registration_token_file
  when: allspark_gitlab.enabled

- name: Generate runner token
  shell: "echo $(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c26) > {{ allspark_root_directory}}/data/secrets/gitlab_runner_registration_token.txt"
  when: allspark_gitlab.enabled and not gitlab_runner_registration_token_file.stat.exists

- name: Generate Gitlab config
  template:
    src: templates/gitlab.rb.j2
    dest: "{{ allspark_root_directory }}/config/gitlab.rb"
  when: allspark_gitlab.enabled

- name: Create Gitlab volumes
  docker_volume:
    name: "allspark_{{ item }}"
  with_items:
    - gitlab_data
    - gitlab_config
  when: allspark_gitlab.enabled

- name: Setup Gitlab
  docker_container:
    name: gitlab
    state: "{{ allspark_gitlab.enabled and 'started' or 'absent'}}"
    image: "{{ allspark_gitlab.image }}"
    hostname: "gitlab.{{ allspark_root_domain }}"
    volumes:
      - "allspark_gitlab_data:/var/opt/gitlab"
      - "allspark_gitlab_config:/etc/gitlab"
      - "{{ allspark_root_directory }}/config/gitlab.rb:/etc/gitlab/gitlab.rb"
      - "{{ allspark_root_directory }}/data/secrets/gitlab_runner_registration_token.txt:/run/secrets/gitlab_runner_registration_token.txt"
      - "{{ allspark_root_directory }}/data/secrets/admin_password.txt:/run/secrets/admin_password.txt"
    restart_policy: always
    networks:
      - name: allspark
    labels:
      "traefik.backend": "gitlab"
      "traefik.port": "80"
      "traefik.frontend.rule": "Host:gitlab.{{ allspark_root_domain }}"
      "traefik.enable": "true"
